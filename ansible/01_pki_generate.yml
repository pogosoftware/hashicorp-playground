---
- name: PKI - Certificates
  hosts: all
  gather_facts: true
  become: false

  vars_files:
    - vars/pki.yml
    - vars/consul.yml

  tasks:
    - name: PKI - Requirements
      delegate_to: localhost
      run_once: true
      block:
        - name: 'PKI - Requirements: Ensure certifcate directories exists'
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
          with_items:
            - "{{ pki_root_path }}"

    - name: PKI - Root CA Certificate
      delegate_to: localhost
      run_once: true
      block:
        - name: 'PKI - Root CA Certificate: Ensure private key exist'
          community.crypto.openssl_privatekey:
            path: "{{ pki_ca_certificate_key_file_path }}"
            curve: secp384r1
            type: ECC

        - name: 'PKI - Root CA Certificate: Ensure CSR exist'
          community.crypto.openssl_csr_pipe:
            privatekey_path: "{{ pki_ca_certificate_key_file_path }}"
            common_name: "{{ pki_ca_certificate_common_name }}"
            organization_name: "{{ pki_organization_name }}"
            locality_name: "{{ pki_locality_name }}"
            country_name: "{{ pki_country_name }}"
            use_common_name_for_san: false
            basic_constraints:
              - "CA:TRUE"
            basic_constraints_critical: true
            key_usage:
              - digitalSignature
              - keyCertSign
              - cRLSign
            key_usage_critical: true
          register: ca_csr

        - name: 'PKI - Root CA Certificate: Ensure certificate exist'
          community.crypto.x509_certificate:
            path: "{{ pki_ca_certificate_file_path }}"
            csr_content: "{{ ca_csr.csr }}"
            privatekey_path: "{{ pki_ca_certificate_key_file_path }}"
            provider: selfsigned
            selfsigned_not_after: "{{ pki_ca_certificate_valid_for }}"
          register: ca_certificate

    - name: PKI - Consul
      delegate_to: localhost
      block:
        - name: 'PKI - Consul: Ensure certs directory exist'
          become: false
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
          with_items:
            - "{{ pki_consul_agent_root_path }}"

        - name: PKI - Consul - Intermediate CA Certificate
          run_once: true
          block:
            - name: 'PKI - Consul - Intermediate CA Certificate: Ensure private key exist'
              community.crypto.openssl_privatekey:
                path: "{{ pki_consul_ca_certificate_key_file_path }}"
                curve: secp384r1
                type: ECC

            - name: 'PKI - Consul - Intermediate CA Certificate: Ensure CSR exist'
              community.crypto.openssl_csr_pipe:
                privatekey_path: "{{ pki_consul_ca_certificate_key_file_path }}"
                common_name: "{{ pki_consul_ca_certificate_common_name }}"
                organization_name: "{{ pki_organization_name }}"
                locality_name: "{{ pki_locality_name }}"
                country_name: "{{ pki_country_name }}"
                use_common_name_for_san: false
                basic_constraints:
                  - "CA:TRUE"
                basic_constraints_critical: true
                key_usage:
                  - digitalSignature
                  - keyCertSign
                  - cRLSign
                key_usage_critical: true
              register: consul_ca_csr

            - name: 'PKI - Consul - Intermediate CA Certificate: Ensure certificate exist'
              community.crypto.x509_certificate:
                path: "{{ pki_consul_ca_certificate_file_path }}"
                csr_content: "{{ consul_ca_csr.csr }}"
                privatekey_path: "{{ pki_consul_ca_certificate_key_file_path }}"
                provider: ownca
                ownca_path: "{{ pki_ca_certificate_file_path }}"
                ownca_privatekey_path: "{{ pki_ca_certificate_key_file_path }}"
                ownca_not_after: "{{ pki_consul_ca_certificate_valid_for }}"
              register: consul_ca_certificate

        - name: PKI - Consul - Agent Certificate
          block:
            - name: 'PKI - Consul - Agent Certificate: Ensure private key exist'
              community.crypto.openssl_privatekey:
                path: "{{ pki_consul_agent_certificate_key_file_path }}"
                curve: secp384r1
                type: ECC

            - name: 'PKI - Consul - Agent Certificate: Ensure common name is set as a fact'
              ansible.builtin.set_fact:
                consul_node_type: "{{ 'server' if ansible_hostname in groups['hcp-servers'] else 'client' }}"

            - name: 'PKI - Consul - Agent Certificate: Ensure CSR exist'
              community.crypto.openssl_csr_pipe:
                privatekey_path: "{{ pki_consul_agent_certificate_key_file_path }}"
                common_name: "{{ pki_consul_agent_certificate_common_name }}"
                organization_name: "{{ pki_organization_name }}"
                locality_name: "{{ pki_locality_name }}"
                country_name: "{{ pki_country_name }}"
                use_common_name_for_san: false
                basic_constraints_critical: true
                basic_constraints:
                  - "CA:FALSE"
                key_usage_critical: true
                key_usage:
                  - digitalSignature
                  - keyEncipherment
                extended_key_usage_critical: true
                extended_key_usage:
                  - serverAuth
                  - clientAuth
                subject_alt_name: ["DNS:{{ pki_consul_agent_certificate_common_name }}", "DNS:localhost", "IP:127.0.0.1"]
              register: consul_agent_csr

            - name: 'PKI - Consul - Agent Certificate: Ensure certificate exist'
              community.crypto.x509_certificate:
                path: "{{ pki_consul_agent_certificate_file_path }}"
                csr_content: "{{ consul_agent_csr.csr }}"
                privatekey_path: "{{ pki_consul_agent_certificate_key_file_path }}"
                provider: ownca
                ownca_path: "{{ pki_consul_ca_certificate_file_path }}"
                ownca_privatekey_path: "{{ pki_consul_ca_certificate_key_file_path }}"
                ownca_not_after: "{{ pki_consul_agent_certificate_valid_for }}"
              register: consul_server_certificate
