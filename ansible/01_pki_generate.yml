---
- name: PKI - Certificates
  hosts: all
  gather_facts: true
  become: false

  vars_files:
    - vars/common.yml
    - vars/pki.yml
    - vars/consul.yml

  tasks:
    - name: PKI - Requirements
      delegate_to: localhost
      run_once: true
      block:
        - name: PKI - Requirements - Ensure certifcate directories exists
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0755'
          with_items:
            - "{{ pki_consul_root_path }}"

    - name: PKI - Ensure CA certificate exist
      run_once: true
      ansible.builtin.include_role:
        name: pki
        tasks_from: self-signed
      vars:
        pki_certificate_file_path: "{{ pki_ca_certificate_file_path }}"
        pki_certificate_key_file_path: "{{ pki_ca_certificate_key_file_path }}"
        pki_common_name: "{{ pki_organization_name }} CA"
        pki_subject_alt_name: ["DNS:*.{{ consul_datacenter }}.{{ consul_domain }}"]
        pki_basic_constraints: "{{ pki_ca_certificate_basic_constraints }}"
        pki_basic_constraints_critical: "{{ pki_ca_certificate_basic_constraints_critical }}"
        pki_key_usage: "{{ pki_ca_certificate_key_usage }}"
        pki_key_usage_critical: "{{ pki_ca_certificate_key_usage_critical }}"
        pki_certificate_not_after: "{{ pki_ca_certificate_valid_for }}"

    - name: PKI - Consul
      block:
        - name: PKI - Consul - Ensure server certificates exist
          when: ansible_hostname in groups['hcp-servers']
          ansible.builtin.include_role:
            name: pki
            tasks_from: ownca
          vars:
            pki_certificate_file_path: "{{ pki_consul_agent_certificate_file_path }}"
            pki_certificate_key_file_path: "{{ pki_consul_agent_certificate_key_file_path }}"
            pki_common_name: "server.{{ consul_datacenter }}.{{ consul_domain }}"
            pki_subject_alt_name: ["DNS:server.{{ consul_datacenter }}.{{ consul_domain }}", "DNS:localhost", "IP:127.0.0.1"]
            pki_basic_constraints: "{{ pki_consul_agent_certificate_basic_constraints }}"
            pki_basic_constraints_critical: "{{ pki_consul_agent_certificate_basic_constraints_critical }}"
            pki_key_usage: "{{ pki_consul_agent_certificate_key_usage }}"
            pki_key_usage_critical: "{{ pki_consul_agent_certificate_key_usage_critical }}"
            pki_extended_key_usage: "{{ pki_consul_agent_certificate_extended_key_usage }}"
            pki_extended_key_usage_critical: "{{ pki_consul_agent_certificate_extended_key_usage_critical }}"
            pki_certificate_not_after: "{{ pki_ca_certificate_valid_for }}"

        - name: PKI - Consul - Ensure client certificates exist
          when: ansible_hostname in groups['hcp-clients']
          ansible.builtin.include_role:
            name: pki
            tasks_from: ownca
          vars:
            pki_certificate_file_path: "{{ pki_consul_agent_certificate_file_path }}"
            pki_certificate_key_file_path: "{{ pki_consul_agent_certificate_key_file_path }}"
            pki_common_name: "client.{{ consul_datacenter }}.{{ consul_domain }}"
            pki_subject_alt_name: ["DNS:client.{{ consul_datacenter }}.{{ consul_domain }}", "DNS:localhost", "IP:127.0.0.1"]
            pki_basic_constraints: "{{ pki_consul_agent_certificate_basic_constraints }}"
            pki_basic_constraints_critical: "{{ pki_consul_agent_certificate_basic_constraints_critical }}"
            pki_key_usage: "{{ pki_consul_agent_certificate_key_usage }}"
            pki_key_usage_critical: "{{ pki_consul_agent_certificate_key_usage_critical }}"
            pki_extended_key_usage: "{{ pki_consul_agent_certificate_extended_key_usage }}"
            pki_extended_key_usage_critical: "{{ pki_consul_agent_certificate_extended_key_usage_critical }}"
            pki_certificate_not_after: "{{ pki_ca_certificate_valid_for }}"

        - name: PKI - Consul - Ensure users certificates exist
          when: ansible_hostname in groups['hcp-servers']
          run_once: true
          ansible.builtin.include_role:
            name: pki
            tasks_from: ownca
          vars:
            pki_certificate_file_path: "{{ pki_consul_cli_certificate_file_path }}"
            pki_certificate_key_file_path: "{{ pki_consul_cli_certificate_key_file_path }}"
            pki_common_name: "client.{{ consul_datacenter }}.{{ consul_domain }}"
            pki_subject_alt_name: ["DNS:client.{{ consul_datacenter }}.{{ consul_domain }}", "DNS:localhost", "IP:127.0.0.1"]
            pki_basic_constraints: "{{ pki_consul_cli_certificate_basic_constraints }}"
            pki_basic_constraints_critical: "{{ pki_consul_cli_certificate_basic_constraints_critical }}"
            pki_key_usage: "{{ pki_consul_cli_certificate_key_usage }}"
            pki_key_usage_critical: "{{ pki_consul_cli_certificate_key_usage_critical }}"
            pki_extended_key_usage: "{{ pki_consul_cli_certificate_extended_key_usage }}"
            pki_extended_key_usage_critical: "{{ pki_consul_cli_certificate_extended_key_usage_critical }}"
            pki_certificate_not_after: "{{ pki_consul_cli_certificate_valid_for }}"
          with_items: "{{ common_cli_users }}"

    # - name: PKI - Validation
    #   delegate_to: localhost
    #   block:
    #     - name: PKI - Validation - Consul
    #       block:
    #         - name: 'PKI - Validation - Consul: Ensure Intermediate CA certificate is valid'
    #           ansible.builtin.command: "openssl verify -CAfile {{ pki_ca_certificate_file_path }} {{ pki_consul_ca_certificate_file_path }}"
    #           changed_when: consul_ca_verification_result.rc != 0
    #           run_once: true
    #           register: consul_ca_verification_result

    #         - name: 'PKI - Validation - Consul: Ensure agent certificates are valid'
    #           ansible.builtin.command: "openssl verify -CAfile {{ pki_ca_certificate_file_path }} -untrusted {{ pki_consul_ca_certificate_file_path }} {{ pki_consul_agent_certificate_file_path }}"
    #           changed_when: consul_agent_verification_result.rc != 0
    #           register: consul_agent_verification_result

    #         - name: 'PKI - Validation - Consul: Ensure cli certificates are valid'
    #           when: ansible_hostname in groups['hcp-servers']
    #           ansible.builtin.command: "openssl verify -CAfile {{ pki_ca_certificate_file_path }} -untrusted {{ pki_consul_ca_certificate_file_path }} {{ pki_consul_cli_certificate_file_path }}"
    #           changed_when: consul_cli_verification_result.rc != 0
    #           register: consul_cli_verification_result
    #           with_items: "{{ common_cli_users }}"
